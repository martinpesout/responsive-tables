@import "compass";
@import "compass/typography/vertical_rhythm";

$break-point: 480px;
$font-family-headers: Tahoma, 'Lucida Grande CE', lucida, sans-serif;

// Baseline, measured in pixels
// The value should be the same as the font-size value for the html element
// If the html element's font-size is set to 62.5% (of the browser's default font-size of 16px),
// then the variable below would be 10px.
$baseline-px: 16px;

// convert px to rems
@mixin rem($property, $px-values) {
    // Convert the baseline into rems
    $baseline-rem: $baseline-px / 1rem;
    // Print the first line in pixel values
    #{$property}: $px-values;
    // If there is only one (numeric) value, return the property/value line for it.
    @if type-of($px-values) == "number" {
            #{$property}: $px-values / $baseline-rem; 
    }
    @else {
            // Create an empty list that we can dump values into
            $rem-values: unquote("");
            @each $value in $px-values {
                    // If the value is zero, return 0
                    @if $value == 0 {
                            $rem-values: append($rem-values, $value); 
                    }
                    @else {
                            $rem-values: append($rem-values, $value / $baseline-rem); 
                    }
            }
            // Return the property and its list of converted values
            #{$property}: $rem-values; 
    }
}

body {
  padding: 1em;
}

table {
	border-style: none;
	border-top-width: 0;
	width: auto;

	tr {
		border-style: none;
		border-bottom-width: 0;
	}

	th, td {
		border-style: none;
		padding-right: 1em;
		@include padding-leader(.5);
		@include padding-trailer(.5);
		text-align: left;
		min-width: 50px;
		vertical-align: top;
	}

	th + th,
	th + td,
	td + th,
	td + td {
		border-left-width: 1px;
	}

	thead tr:last-child {
		border-bottom-width: 2px;
	}

	thead th {
		@include rem('font-size', 17px);
        font-family: $font-family-headers;
		font-weight: bold;
		line-height: 1.25;
		text-transform: uppercase;

	    border-bottom: 1px solid;
	    padding-bottom: .25em;
	}

	tbody th {
	    font-weight: normal;
	}
}

// undo tables for small screens
@media (max-width: $break-point) {
  
	// make each table separate from other ones
	table {
		border: 0;
		display: block;
		width: 100%;
			
	    // make sure captions are displayed
	    caption {
			display: block;
		}
	    
	    // wipe the thead from the face of the earth, modern screen readers will expose the generated content
		thead {
			display: none;
	      	visibility: hidden;
		}
	    
	    /*
	     * make everything display block so it 
	     * aligns vertically
	     */
		tbody, tr, th, td {
			border: 0;
			display: block;
			padding: 0;
			text-align: left;
			white-space: normal;
		}
	    
		td,
		th {
			width: 100%;
			float: left;
			clear: both;

			// give each row a little space
			&:last-child {
				@include trailer;
			}
			// give each row a little space (fix for IE8)
			&.last-child {
				@include trailer;
			}
		}
	    
	    /* Labeling
	     * adding a data-title attribute to the cells
	     * lets us add text before the content to provide
	     * the missing context
	     * 
	     * Markup: 
	     *   <td data-title="Column Header">Content Here</td>
	     * 
	     * Display:
	     *   Column Header: Content Here
	     */
		th[data-title]:before,
		td[data-title]:before {
			content: attr(data-title) ":\00A0";
			font-weight: bold;
		}
		
		th:not([data-title]) {
			font-weight: bold;
		}
	    
	    // hide empty cells
		td:empty {
			display: none;
		}
	}
}
